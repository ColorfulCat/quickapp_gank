// Generated by IcedCoffeeScript 1.7.1-f
(function() {
  var AbsPath, AnyPath, PlaPath, RelPath, addLeadingSlash, addTrailingSlash, removeLeadingSlash, removeTrailingSlash;

  removeTrailingSlash = function(path) {
    if (path === '/') {
      return path;
    } else if (path[path.length - 1] === '/') {
      return path.substr(0, path.length - 1);
    } else {
      return path;
    }
  };

  addTrailingSlash = function(path) {
    if (path === '') {
      return path;
    } else if (path[path.length - 1] !== '/') {
      return "" + path + "/";
    } else {
      return path;
    }
  };

  removeLeadingSlash = function(path) {
    if (path[0] === '/') {
      return path.substr(1);
    } else {
      return path;
    }
  };

  addLeadingSlash = function(path) {
    if (path[0] !== '/') {
      return "/" + path;
    } else {
      return path;
    }
  };

  PlaPath = {
    normalize: function(path) {
      return removeLeadingSlash(path);
    },
    isSubpath: function(subpath, superpath) {
      if (superpath === subpath) {
        return true;
      } else {
        superpath = addTrailingSlash(superpath);
        return subpath.substr(0, superpath.length) === superpath;
      }
    },
    numberOfMatchingTrailingComponents: function(path1, path2) {
      var common, components1, components2, len, len1, len2;
      components1 = path1.split('/');
      components2 = path2.split('/');
      len1 = components1.length;
      len2 = components2.length;
      len = Math.min(len1, len2);
      common = 0;
      while ((common < len) && components1[len1 - common - 1] === components2[len2 - common - 1]) {
        common++;
      }
      return common;
    }
  };

  AbsPath = {
    normalize: function(path) {
      return addLeadingSlash(path);
    }
  };

  RelPath = {
    normalize: function(path) {
      return path;
    }
  };

  AnyPath = {
    normalize: function(path) {
      return path;
    }
  };

  module.exports = {
    PlaPath: PlaPath,
    AbsPath: AbsPath,
    RelPath: RelPath,
    AnyPath: AnyPath
  };

}).call(this);
