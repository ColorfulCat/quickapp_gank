// Generated by CoffeeScript 1.3.3
(function() {
  var Mask, assert;

  assert = require('assert');

  Mask = require('../index').Mask;

  describe("Mask", function() {
    describe("with a single file name", function() {
      var mask;
      mask = Mask.parse("foo.txt");
      it("should match a file with that name", function() {
        return assert.ok(mask.matches("foo.txt"));
      });
      return it("should not match a file with a different name", function() {
        return assert.ok(!mask.matches("bar.txt"));
      });
    });
    describe("with an extension only (*.txt)", function() {
      var mask;
      mask = Mask.parse("*.txt");
      it("should match a file with that extension", function() {
        return assert.ok(mask.matches("foo.txt"));
      });
      return it("should not match a file with a different extension", function() {
        return assert.ok(!mask.matches("foo.js"));
      });
    });
    describe("with an asterisk inside the name (foo*oob)", function() {
      var mask;
      mask = Mask.parse("foo*oob");
      it("should match a file like fooqweoob", function() {
        return assert.ok(mask.matches("fooqweoob"));
      });
      it("should match a file like foooob", function() {
        return assert.ok(mask.matches("foooob"));
      });
      it("should not match a file with overlapping prefix/suffix (like foob)", function() {
        return assert.ok(!mask.matches("foob"));
      });
      return it("should not match an unrelated file", function() {
        return assert.ok(!mask.matches("foo.js"));
      });
    });
    describe("with an asterisk at the end of the name (foo*)", function() {
      var mask;
      mask = Mask.parse("foo*");
      it("should match a file like fooqwe", function() {
        return assert.ok(mask.matches("fooqwe"));
      });
      it("should match a file named foo", function() {
        return assert.ok(mask.matches("foo"));
      });
      return it("should not match an unrelated file", function() {
        return assert.ok(!mask.matches("mooqwe"));
      });
    });
    return describe("with an asterisk alone", function() {
      var mask;
      mask = Mask.parse("*");
      return it("should match any file", function() {
        return assert.ok(mask.matches("qwerty.txt"));
      });
    });
  });

}).call(this);
